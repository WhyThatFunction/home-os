db:
  enabled: true
  instances: 2
  storage:
    size: 5Gi
    storageClass: longhorn
  resources:
    requests:
      memory: "512Mi"
      cpu: "1"
    limits:
      memory: "1Gi"
      cpu: "2"
      
owu:
  podLabels:
    app.kubernetes.io/name: owui
  ollama:
    enabled: false
  tika:
    enabled: true
    fullnameOverride: owu-tika
    resources:
      limits:
        cpu: "800m"
        memory: 4000Mi
      requests:
        cpu: "200m"
        memory: 2000Mi
  openaiBaseApiUrl: "http://litellm.litellm.svc.cluster.local:4000"
  pipelines:
    enabled: true
    persistence:
      storageClass: longhorn
  sso:
    enabled: true
    enableSignup: true
    mergeAccountsByEmail: true
    oidc:
      enabled: true
      providerName: "SSegning Accounts"
      clientId: ssegning-ai
      clientExistingSecret: owui-sso
      clientExistingSecretKey: clientSecret
      providerUrl: https://accounts.ssegning.com/realms/dev/.well-known/openid-configuration
  extraEnvFrom:
    - secretRef:
        name: owui-env
  extraEnvVars:
    - name: WEBUI_URL
      value: "https://ai.ssegning.me"

    - name: S3_ADDRESSING_STYLE
      value: "path"
          
    - name: DATABASE_URL
      valueFrom:
        secretKeyRef:
          name: chat-ui-pg-app
          key: uri

    - name: ENABLE_PERSISTENT_CONFIG
      value: "False"

    - name: ENABLE_LOGIN_FORM
      value: "False"

    - name: USER_PERMISSIONS_WORKSPACE_MODELS_ACCESS
      value: "True"
    - name: USER_PERMISSIONS_WORKSPACE_KNOWLEDGE_ACCESS
      value: "True"

    - name: CUSTOM_NAME
      value: "SSegning AI"

    - name: WEBUI_BANNERS
      value: "[{\"id\": \"1\", \"type\": \"warning\", \"title\": \"Your messages are stored.\", \"content\": \"Your messages are stored and may be reviewed by human people. LLM's are prone to hallucinations, check sources.\", \"dismissible\": true, \"timestamp\": 1000}]"
      
    - name: ENABLE_REALTIME_CHAT_SAVE
      value: "True"
    - name: ENABLE_CHANNELS
      value: "True"
    - name: DEFAULT_USER_ROLE
      value: "user"
    - name: TASK_MODEL
      value: "gemini-2.5-flash-preview"
    - name: TASK_MODEL_EXTERNAL
      value: "gemini-2.5-flash-preview"
    - name: ENABLE_AUTOCOMPLETE_GENERATION
      value: "False"
    - name: AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH
      value: "15"
    - name: ENABLE_COMMUNITY_SHARING
      value: "False"
    - name: WEBUI_SECRET_KEY
      value: "False"

    - name: RESET_CONFIG_ON_START
      value: "True"

    - name: DEFAULT_MODELS
      value: "o4-mini"

    - name: TOOL_SERVER_CONNECTIONS
      valueFrom:
        secretKeyRef:
          name: owui-tools
          key: tools.json

    - name: ENABLE_WEB_SEARCH
      value: "True"
    - name: WEB_SEARCH_TRUST_ENV
      value: "True"
    - name: WEB_SEARCH_RESULT_COUNT
      value: "5"
    - name: WEB_SEARCH_CONCURRENT_REQUESTS
      value: "10"
    - name: ENABLE_RAG_WEB_SEARCH
      value: "True"
    - name: WEB_SEARCH_ENGINE
      value: "brave"
    - name: BRAVE_SEARCH_API_KEY
      valueFrom:
        secretKeyRef:
          name: owui-brave
          key: brave-key

    - name: WEB_LOADER_ENGINE
      value: "playwright"
    - name: PLAYWRIGHT_WS_URL
      value: "ws://mcpo-playwright.mcpo.svc.cluster.local:3000"

    - name: AUDIO_STT_ENGINE
      value: "openai"
    - name: AUDIO_STT_MODEL
      value: "whisper-1"
    - name: AUDIO_STT_OPENAI_API_BASE_URL
      value: "http://litellm.litellm.svc.cluster.local:4000"
    - name: AUDIO_STT_OPENAI_API_KEY
      valueFrom:
        secretKeyRef:
          name: owui-litellm
          key: master-key

    - name: AUDIO_TTS_ENGINE
      value: "openai"
    - name: AUDIO_TTS_MODEL
      value: "tts-1"
    - name: AUDIO_TTS_OPENAI_API_BASE_URL
      value: "http://litellm.litellm.svc.cluster.local:4000"
    - name: AUDIO_TTS_OPENAI_API_KEY
      valueFrom:
        secretKeyRef:
          name: owui-litellm
          key: master-key

    - name: ENABLE_IMAGE_GENERATION
      value: "True"
    - name: IMAGE_GENERATION_ENGINE
      value: "openai"
    - name: IMAGE_GENERATION_MODEL
      value: "dall-e-3"
    - name: IMAGE_SIZE
      value: "1024x1024"
    - name: IMAGES_OPENAI_API_BASE_URL
      value: "http://litellm.litellm.svc.cluster.local:4000"
    - name: IMAGES_OPENAI_API_KEY
      valueFrom:
        secretKeyRef:
          name: owui-litellm
          key: master-key

    - name: RAG_EMBEDDING_ENGINE
      value: "openai"
    - name: RAG_EMBEDDING_MODEL
      value: "voyage-3-large" #text-embedding-3-small
    - name: ENABLE_RAG_HYBRID_SEARCH
      value: "True"
    - name: RAG_TOP_K
      value: "5"
    - name: RAG_TOP_K_RERANKER
      value: "5"
    - name: RAG_RERANKING_MODEL
      value: "gpt-4o-mini"
    - name: RAG_FULL_CONTEXT
      value: "False"
    - name: RAG_OPENAI_API_BASE_URL
      value: "http://litellm.litellm.svc.cluster.local:4000"
    - name: RAG_OPENAI_API_KEY
      valueFrom:
        secretKeyRef:
          name: owui-litellm
          key: master-key
          
    - name: TITLE_GENERATION_PROMPT_TEMPLATE
      value: |
        ### Task:
        Generate a concise, 3-5 word title with an emoji summarizing the chat history.
        
        ### Guidelines:
        - The title should clearly represent the main theme or subject of the conversation.
        - Always use emojis that enhance understanding of the topic, but avoid quotation marks or special formatting.
        - Write the title in the chat's primary language; default to English if multilingual.
        - Prioritize accuracy over excessive creativity; keep it clear and simple.
        - The title should be short and funny
        
        ### Output:
        JSON format: { "title": "<emoji> your concise title here" }
        ### Examples:
        - { "title": "üìâ Stock Market Trends" },
        - { "title": "üç™ Perfect Chocolate Chip Recipe" },
        - { "title": "üéß Evolution of Music Streaming" },
        - { "title": "üë®üèø‚Äçüíª Remote Work Productivity Tips" },
        - { "title": "üß† Artificial Intelligence in Healthcare" },
        - { "title": "üéÆ Video Game Development Insights" }
        ### Chat History:
        <chat_history>
        {{MESSAGES:END:2}}
        </chat_history>
    - name: DEFAULT_FOLLOW_UP_GENERATION_PROMPT_TEMPLATE
      value: |
        ### Task:
        Suggest 3-5 relevant follow-up questions or prompts that the user might naturally ask next in this conversation as a **user**, based on the chat history, to help continue or deepen the discussion.
        ### Guidelines:
        - Write all follow-up questions from the user‚Äôs point of view, directed to the assistant.
        - Make questions concise, clear, and directly related to the discussed topic(s).
        - Only suggest follow-ups that make sense given the chat content and do not repeat what was already covered.
        - If the conversation is very short or not specific, suggest more general (but relevant) follow-ups the user might ask.
        - Use the conversation's primary language; default to English if multilingual.
        - Response must be a JSON array of strings, no extra text or formatting.
        - Always use emojis that enhance understanding of the topic, but avoid quotation marks or special formatting.
        - Questions should be open minded and funny
        
        ### Output:
        JSON format: { "follow_ups": ["üìâ Question 1?", "üéÆ Question 2?", "üéß Question 3?"] }
        
        ### Chat History:
        <chat_history>
        {{MESSAGES:END:6}}
        </chat_history>"
  
    - name: VECTOR_DB
      value: "chroma"
    - name: CHROMA_HTTP_HOST
      value: "chromadb.chromadb.svc.cluster.local"
      
    - name: REDIS_URL
      value: "redis://redis-master.database.svc.cluster.local:6379"
  
  ingress:
    enabled: true
    class: traefik
    annotations:
      cert-manager.io/cluster-issuer: cert-cloudflare
    host: ai.ssegning.me
    tls: true
  persistence:
    enabled: true
    provider: s3
    s3:
      accessKey: owui-user
      secretKeyExistingSecret: owui-minio
      secretKeyExistingSecretKey: secretKey
      endpointUrl: http://s3-minio.s3.svc.cluster.local:9000
      bucket: ai-apps
      keyPrefix: open-web-ui
  websocket:
    enabled: true
    url: "redis://redis-master.database.svc.cluster.local:6379"
    redis:
      enabled: false
